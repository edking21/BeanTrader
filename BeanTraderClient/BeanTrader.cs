//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeanTrader.Models
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeOffer", Namespace="http://schemas.datacontract.org/2004/07/BeanTrader.Models")]
    public partial class TradeOffer : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Collections.Generic.Dictionary<BeanTrader.Models.Beans, uint> AskingField;
        
        private System.Guid IdField;
        
        private System.Collections.Generic.Dictionary<BeanTrader.Models.Beans, uint> OfferingField;
        
        private System.Guid SellerIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<BeanTrader.Models.Beans, uint> Asking
        {
            get
            {
                return this.AskingField;
            }
            set
            {
                this.AskingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<BeanTrader.Models.Beans, uint> Offering
        {
            get
            {
                return this.OfferingField;
            }
            set
            {
                this.OfferingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SellerId
        {
            get
            {
                return this.SellerIdField;
            }
            set
            {
                this.SellerIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Beans", Namespace="http://schemas.datacontract.org/2004/07/BeanTrader.Models")]
    public enum Beans : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Red = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Green = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yellow = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trader", Namespace="http://schemas.datacontract.org/2004/07/BeanTrader.Models")]
    public partial class Trader : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IdField;
        
        private int[] InventoryField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Inventory
        {
            get
            {
                return this.InventoryField;
            }
            set
            {
                this.InventoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="BeanTraderService", CallbackContract=typeof(BeanTraderServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface BeanTraderService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/ListenForTradeOffers", ReplyAction="http://tempuri.org/BeanTraderService/ListenForTradeOffersResponse")]
    BeanTrader.Models.TradeOffer[] ListenForTradeOffers();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/ListenForTradeOffers", ReplyAction="http://tempuri.org/BeanTraderService/ListenForTradeOffersResponse")]
    System.Threading.Tasks.Task<BeanTrader.Models.TradeOffer[]> ListenForTradeOffersAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/GetCurrentTraderInfo", ReplyAction="http://tempuri.org/BeanTraderService/GetCurrentTraderInfoResponse")]
    BeanTrader.Models.Trader GetCurrentTraderInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/GetCurrentTraderInfo", ReplyAction="http://tempuri.org/BeanTraderService/GetCurrentTraderInfoResponse")]
    System.Threading.Tasks.Task<BeanTrader.Models.Trader> GetCurrentTraderInfoAsync();
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/Login")]
    void Login(string name);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/Login")]
    System.Threading.Tasks.Task LoginAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/Logout")]
    void Logout();
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/Logout")]
    System.Threading.Tasks.Task LogoutAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/GetTraderNames", ReplyAction="http://tempuri.org/BeanTraderService/GetTraderNamesResponse")]
    System.Collections.Generic.Dictionary<System.Guid, string> GetTraderNames(System.Guid[] traderId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/GetTraderNames", ReplyAction="http://tempuri.org/BeanTraderService/GetTraderNamesResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.Guid, string>> GetTraderNamesAsync(System.Guid[] traderId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/AcceptTrade", ReplyAction="http://tempuri.org/BeanTraderService/AcceptTradeResponse")]
    bool AcceptTrade(System.Guid offerId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/AcceptTrade", ReplyAction="http://tempuri.org/BeanTraderService/AcceptTradeResponse")]
    System.Threading.Tasks.Task<bool> AcceptTradeAsync(System.Guid offerId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/OfferTrade", ReplyAction="http://tempuri.org/BeanTraderService/OfferTradeResponse")]
    System.Guid OfferTrade(BeanTrader.Models.TradeOffer offer);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/OfferTrade", ReplyAction="http://tempuri.org/BeanTraderService/OfferTradeResponse")]
    System.Threading.Tasks.Task<System.Guid> OfferTradeAsync(BeanTrader.Models.TradeOffer offer);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/CancelTradeOffer", ReplyAction="http://tempuri.org/BeanTraderService/CancelTradeOfferResponse")]
    bool CancelTradeOffer(System.Guid offerId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BeanTraderService/CancelTradeOffer", ReplyAction="http://tempuri.org/BeanTraderService/CancelTradeOfferResponse")]
    System.Threading.Tasks.Task<bool> CancelTradeOfferAsync(System.Guid offerId);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/StopListening")]
    void StopListening();
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/StopListening")]
    System.Threading.Tasks.Task StopListeningAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface BeanTraderServiceCallback
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/AddNewTradeOffer")]
    void AddNewTradeOffer(BeanTrader.Models.TradeOffer offer);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/RemoveTradeOffer")]
    void RemoveTradeOffer(System.Guid offerId);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/BeanTraderService/TradeAccepted")]
    void TradeAccepted(BeanTrader.Models.TradeOffer offer, System.Guid buyerId);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface BeanTraderServiceChannel : BeanTraderService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class BeanTraderServiceClient : System.ServiceModel.DuplexClientBase<BeanTraderService>, BeanTraderService
{
    
    public BeanTraderServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public BeanTraderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public BeanTraderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public BeanTraderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public BeanTraderServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public BeanTrader.Models.TradeOffer[] ListenForTradeOffers()
    {
        return base.Channel.ListenForTradeOffers();
    }
    
    public System.Threading.Tasks.Task<BeanTrader.Models.TradeOffer[]> ListenForTradeOffersAsync()
    {
        return base.Channel.ListenForTradeOffersAsync();
    }
    
    public BeanTrader.Models.Trader GetCurrentTraderInfo()
    {
        return base.Channel.GetCurrentTraderInfo();
    }
    
    public System.Threading.Tasks.Task<BeanTrader.Models.Trader> GetCurrentTraderInfoAsync()
    {
        return base.Channel.GetCurrentTraderInfoAsync();
    }
    
    public void Login(string name)
    {
        base.Channel.Login(name);
    }
    
    public System.Threading.Tasks.Task LoginAsync(string name)
    {
        return base.Channel.LoginAsync(name);
    }
    
    public void Logout()
    {
        base.Channel.Logout();
    }
    
    public System.Threading.Tasks.Task LogoutAsync()
    {
        return base.Channel.LogoutAsync();
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, string> GetTraderNames(System.Guid[] traderId)
    {
        return base.Channel.GetTraderNames(traderId);
    }
    
    public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.Guid, string>> GetTraderNamesAsync(System.Guid[] traderId)
    {
        return base.Channel.GetTraderNamesAsync(traderId);
    }
    
    public bool AcceptTrade(System.Guid offerId)
    {
        return base.Channel.AcceptTrade(offerId);
    }
    
    public System.Threading.Tasks.Task<bool> AcceptTradeAsync(System.Guid offerId)
    {
        return base.Channel.AcceptTradeAsync(offerId);
    }
    
    public System.Guid OfferTrade(BeanTrader.Models.TradeOffer offer)
    {
        return base.Channel.OfferTrade(offer);
    }
    
    public System.Threading.Tasks.Task<System.Guid> OfferTradeAsync(BeanTrader.Models.TradeOffer offer)
    {
        return base.Channel.OfferTradeAsync(offer);
    }
    
    public bool CancelTradeOffer(System.Guid offerId)
    {
        return base.Channel.CancelTradeOffer(offerId);
    }
    
    public System.Threading.Tasks.Task<bool> CancelTradeOfferAsync(System.Guid offerId)
    {
        return base.Channel.CancelTradeOfferAsync(offerId);
    }
    
    public void StopListening()
    {
        base.Channel.StopListening();
    }
    
    public System.Threading.Tasks.Task StopListeningAsync()
    {
        return base.Channel.StopListeningAsync();
    }
}
